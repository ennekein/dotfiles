# make tmux display things in 256 colors
set -g default-terminal "screen-256color"

# set scrollback history to 10000 (10k)
set -g history-limit 10000

# set Ctrl-Space as the default prefix key combination
# and unbind C-b to free it up, 
set -g prefix C-Space
bind Space send-prefix
unbind C-b

# C-Space twice switches between the last window, like screen
bind C-Space last-window

# set terminal title
set -g set-titles on
set -g set-titles-string '#h ❐ #S ● #I #W'

# shorten command delay
set -sg escape-time 1

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

# activity
set -g monitor-activity on
set -g visual-activity off
set -g bell-action any

# Add truecolor support (tmux info | grep Tc)
set-option -ga terminal-overrides ",xterm-256color:Tc"

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# pane movement
bind-key @ command-prompt -p "send pane to:"  "join-pane -t '%%'"

# use zsh, needed in wsl
set-option -g default-shell /usr/bin/zsh

# use vim keybindings
set-window-option -g mode-keys vi

#Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

#enable mouse
set -g mouse on

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window

# ---------------------
# Colors and status bar
# --------------------- 
#HL_BG_COLOR=colour246
#HL_BG_COLOR=colour35
HL_BG_COLOR='#00afff'
BG_COLOR=colour237
BG2_COLOR=colour239
HL_FG_COLOR=colour234
E_FG_COLOR=colour234
E_BG_COLOR=colour246
FG_COLOR=colour246

#BG_COLOR=colour234
#BG2_COLOR=colour236
#HL_BG_COLOR=colour31
#HL_FG_COLOR=colour117
#E_FG_COLOR=colour235
#E_BG_COLOR=colour252
#FG_COLOR=colour247


set -g status-bg "$BG_COLOR"
set -g status-fg "$FG_COLOR"

setw -g window-status-separator ""
#set -g status-justify "left"
#set -g status-left-length "100"
#set -g status "on"
#set -g status-right-length "100"

#setw -g pane-border-style "fg=$BG2_COLOR" 
#setw -g pane-active-border-style "fg=$FG_COLOR,bg=$FG_COLOR" #fat border
setw -g pane-active-border-style "fg=$HL_BG_COLOR"

set -g status-interval 10

setw -g window-status-last-style "fg=$HL_BG_COLOR"
setw -g window-status-activity-style "underscore"
setw -g window-status-bell-style "fg=red,bold"
setw -g window-status-style "fg=$FG_COLOR"
setw -g window-status-format "  #I #W "
setw -g window-status-current-format "#[fg=$BG_COLOR,bg=$HL_BG_COLOR]#[fg=$HL_FG_COLOR] #I #W#[fg=$HL_BG_COLOR,bg=$BG_COLOR]#[fg=$FG_COLOR,bg=$BG_COLOR]"

ping_lantency_cmd="~/bin/ping_latency.sh `cat ~/.tmux_last_ssh_client`"
load_avg_cmd="cut -d ' ' -f 1-3 /proc/loadavg"
datetime_utc_cmd="date --utc | awk '{print $4}'"

set -g status-left "#[fg=$E_FG_COLOR,bg=$E_BG_COLOR] #S #[fg=$E_BG_COLOR,bg=$BG_COLOR]#[fg=$FG_COLOR,bg=$BG_COLOR]"
set -g status-right "#[fg=$BG2_COLOR,bg=$BG_COLOR]#[fg=$FG_COLOR,bg=$BG2_COLOR] #($ping_lantency_cmd)  #($load_avg_cmd)  #h  %Y-%m-%d #[fg=$E_BG_COLOR,bg=$BG2_COLOR]#[fg=$E_FG_COLOR,bg=$E_BG_COLOR] (#($datetime_utc_cmd) UTC) %H:%M "


