-- vim: ts=4 sw=4 noet ai cindent syntax=lua
--[[
Conky configuration for i3bar
see https://i3wm.org/docs/i3bar-protocol.html for syntax details
]]
--[[
        {
${if_match "${battery_percent}" <= "20"}
                "full_text": "",
$else
${if_match "${battery_percent}" <= "40"}
                "full_text": "",
$else
${if_match "${battery_percent}" <= "60"}
                "full_text": "",
$else
${if_match "${battery_percent}" <= "80"}
                "full_text": "",
$else
${if_match "${battery_percent}" <= "100"}
                "full_text": "",
$endif
                "color": "\#f9f5d7",
                "separator":false
        },
        {
                "full_text":"${battery_short}",
                "color": "\#bdae93"
        },
]]

conky.config = {
    out_to_x = false,
    own_window = false,
    out_to_console = true,
    background = false,
    max_text_width = 0,
    update_interval = 1.0,
    total_run_times = 0,
    short_units = true,
    if_up_strictness = 'address',
    use_spacer = 'left',
    override_utf8_locale = false,
    cpu_avg_samples = 1,
}


conky.text = [[

[
        {
				"full_text": " ${exec xprop -id $(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}') | awk '/_NET_WM_NAME/{$1=$2="";print}' | tr -s ' ' | awk '{print substr($0, 3, length($0) - 3)}'} "
        },
        {
                "full_text": "${execi 6000 ~/bin/weather.sh}"
        },
${if_running spotify}
        {
                "full_text": "",
                "separator":false
        },
        {
                "full_text": "${exec echo `dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:'org.mpris.MediaPlayer2.Player' string:'Metadata'` | sed  's/.* \"xesam:title\"[^\"]*\"\([^\"]*\).*/\1/'}"
        },
${endif}

${if_match "${exec amixer -c 0 get Master | grep Mono: | cut -d' ' -f8 | tr -d []}" == "on"}
        {
                "full_text": "  ",
                "separator":false
        },
        {
                "full_text": "${exec amixer -c 0 get Master | grep Mono: | cut -d' ' -f6 | tr -d []}"
        },
$else
        {
                "full_text": " ",
                "separator":false
        },
        {
                "full_text": ""
        },
$endif
        {
                "full_text": " CPU",
                "separator":false
        },

        {
                "full_text": "${cpu}%",
                "min_width": "100%",
                "separator":false,
                "separator_block_width":0
        },
        {
                "full_text": "${loadavg 1} ${loadavg 2} ${loadavg 3}"
        },
        {
                "full_text": " RAM",
                "separator":false
        },
        {
                "full_text": "$memperc%",
                "min_width": "100%"
        },
        {
                "full_text": " ",
                "separator":false
        },
        {
                "full_text": "${fs_used_perc /}% ",
                "separator":false
        },
        {
                "full_text": "",
                "separator":false
        },
        {
                "full_text": "${diskio_read sda}",
                "min_width":"100.0B",
                "separator":false
        },
        {
                "full_text": "",
                "separator":false

        },
        {
                "full_text": "${diskio_write sda}",
                "min_width":"100.0B"
        },
${if_match "${execi 600 get_if.sh}" == "wlan0"}
        {
                "full_text": " ",
                "separator":false

        },
        {
                "full_text": "${downspeed wlan0}",
                "min_width":"10000",
                "separator":false
        },
        {
                "full_text": " ",
                "separator":false
        },
        {
                "full_text": "${upspeed wlan0}",
                "min_width":"10000"
        },
        {
                "full_text": " ${wireless_link_qual_perc wlan0}%",
                "min_width":"100%",
                "separator":false
        },
$else
    ${if_match "${execi 600 get_if.sh}" == "wlp5s0"}
        {
                "full_text": " ",
                "separator":false

        },
        {
                "full_text": "${downspeed wlp5s0}",
                "min_width":"10000",
                "separator":false
        },
        {
                "full_text": "",
                "separator":false

        },
        {
                "full_text": "${upspeed wlp5s0}",
                "min_width":"10000",
                "separator":false
        },
        {
                "full_text": "${wireless_link_qual_perc wlp5s0}%",
                "min_width":"100%"
        },
    $else
        {
                "full_text": "${execi 600 get_if.sh}",
                "min_width":50,
                "separator":false
        },
    $endif
$endif
        {
                "full_text": " VPN",
                "separator":false

        },
${if_match "${exec pidof vpnc}" == ""}
        {
                "full_text": ""
        },
$else
        {
            "full_text": " ${exec echo $(sed 's/vpnc//' /proc/$(pidof vpnc)/cmdline)}"
        },
$endif



        {
                "full_text": " ${time %c}"
        }
],
]]
