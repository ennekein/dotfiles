-- vim: ts=4 sw=4 noet ai cindent syntax=lua
--[[
Conky configuration for i3bar
see https://i3wm.org/docs/i3bar-protocol.html for syntax details
]]

conky.config = {
    out_to_x = false,
    own_window = false,
    out_to_console = true,
    background = false,
    max_text_width = 0,
    update_interval = 1.0,
    total_run_times = 0,
    short_units = true,
    if_up_strictness = 'address',
    use_spacer = 'left',
    override_utf8_locale = false,
    cpu_avg_samples = 1,
}


conky.text = [[

[
${if_running spotify}
        {
                "full_text": " ",
                "color": "\#CCCCCC"
        },
        {
                "full_text": "${exec echo `dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:'org.mpris.MediaPlayer2.Player' string:'Metadata'` | sed  's/.* \"xesam:title\"[^\"]*\"\([^\"]*\).*/\1/'}",
                "color": "\#06989A"
        },
${endif}

${if_match "${exec amixer -c 0 get Master | grep Mono: | cut -d' ' -f8 | tr -d []}" == "on"}
        {
                "full_text": ":",
                "color": "\#CCCCCC"
        },
        {
                "full_text": "${exec amixer -c 0 get Master | grep Mono: | cut -d' ' -f6 | tr -d []}",
                "color": "\#06989A"
        },
$else
        {
                "full_text": "",
                "color": "\#CCCCCC"
        },
        {
                "full_text": "",
                "color": "\#FF0000"
        },
$endif
        {
                "full_text": "CPU",
                "color": "\#CCCCCC"
        },

        {
                "full_text": "${cpu}%",
                "color": "\#06989A",
                "min_width":30
        },
        {
                "full_text": "${loadavg 1} ${loadavg 2} ${loadavg 3}",
                "color": "\#06989A"
        },
        {
                "full_text": "RAM",
                "color": "\#CCCCCC"
        },
        {
                "full_text": "$memperc%",
                "color": "\#06989A"
        },
        {
                "full_text": "",
                "color": "\#CCCCCC"
        },
        {
                "full_text": "${fs_used_perc /}% ",
                "color": "\#06989A"
        },
        {
                "full_text": " ${diskio_read sda}",
                "color": "\#06989A",
                "min_width":65
        },
        {
                "full_text": " ${diskio_write sda}",
                "color": "\#06989A",
                "min_width":65
        },
${if_match "${execi 600 get_if.sh}" == "eth0"}
        {
                "full_text": "eth0",
                "color": "\#06989A",
                "min_width":50
        },
$else
    ${if_match "${execi 600 get_if.sh}" == "wlan0"}
        {
                "full_text": "wlan0${wireless_link_qual_perc wlan0}%",
                "color": "\#06989A",
                "min_width":50
        },
    $else
        ${if_match "${execi 600 get_if.sh}" == "wlp5s0"}
        {
                "full_text": " ${downspeed wlp5s0}",
                "color": "\#06989A",
                "min_width":65
        },
        {
                "full_text": " ${upspeed wlp5s0}",
                "color": "\#06989A",
                "min_width":65
        },
        {
                "full_text": " ${wireless_link_qual_perc wlp5s0}%",
                "color": "\#06989A",
                "min_width":50
        },
        $else
        {
                "full_text": "? ${execi 600 get_if.sh}",
                "color": "\#06989A",
                "min_width":50
        },
        $endif
    $endif
$endif
        {
                "full_text": "VPN",
                "color": "\#CCCCCC"
        },
${if_match "${exec pidof vpnc}" == ""}
        {
                "full_text": "",
                "color": "\#06989A"
        },
$else
        {
            "full_text": " ${exec echo $(sed 's/vpnc//' /proc/$(pidof vpnc)/cmdline)}",
            "color": "\#06989A"
        },
$endif
        {
                "full_text": "${time %c}",
                "color": "\#97BBF7"
        }
],
]]
