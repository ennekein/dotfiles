# vi: ft=sh

# from https://en.wikipedia.org/wiki/ANSI_escape_code#Colors
#    ESC[ … 38;5;<n> … m Select foreground color
#    ESC[ … 48;5;<n> … m Select background color
#    0x00-0x07:  standard colors (as in ESC [ 30–37 m)
#    0x08-0x0F:  high intensity colors (as in ESC [ 90–97 m)
#    0x10-0xE7:  6 × 6 × 6 cube (216 colors): 16 + 36 × r + 6 × g + b (0 ≤ r, g, b ≤ 5)
#    0xE8-0xFF:  grayscale from black to white in 24 steps
function term-256-color-test()
{
    for fgbg in 38 48 ; do #Foreground/Background
        echo "Standard colors"
        for ((color=0; color<8; color++)); do
            echo -en "\e[${fgbg};5;${color}m $(echo '   '${color}|tail -c 4)\e[0m"
        done
        echo #New line
        echo #New line
        echo "High-intensity colors"
        for ((color=8; color<16; color++)); do
            echo -en "\e[${fgbg};5;${color}m $(echo '   '${color}|tail -c 4)\e[0m"
        done
        echo #New line
        echo #New line
        for ((color=16; color<232; color++)); do
            #Display the color
            echo -en "\e[${fgbg};5;${color}m $(echo '   '${color}|tail -c 4)\e[0m"
            #Display 36 colors per lines
            if [ $((($color - 15) % 36)) = 0 ] ; then
                echo #New line
            fi
        done
        echo #New line
        echo "Grayscale colors"
        for ((color=232; color<256; color++)); do
            echo -en "\e[${fgbg};5;${color}m $(echo '   '${color}|tail -c 4)\e[0m"
        done
        echo #New line
        echo #New line
    done
}

function term-truecolor-test()
{
    printf "\x1b[38;2;255;100;0mTRUECOLOR\x1b[0m\n"
    awk 'BEGIN{
        s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
        for (colnum = 0; colnum<77; colnum++) {
            r = 255-(colnum*255/76);
            g = (colnum*510/76);
            b = (colnum*255/76);
            if (g>255) g = 510-g;
            printf "\033[48;2;%d;%d;%dm", r,g,b;
            printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
            printf "%s\033[0m", substr(s,colnum+1,1);
        }
        printf "\n";
    }'
}


function countdown(){
    date1=$((`date +%s` + $1)); 
    while [ "$date1" -ge `date +%s` ]; do 
        echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
        sleep 0.1
    done
    notify-send "Countdown Done $1 seconds elapsed" "$2"
}
function stopwatch(){
    date1=`date +%s`; 
    while true; do 
        echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r"; 
        sleep 0.1
    done
}

# install spell to get /usr/share/dict/words
function randomWord() {
    shuf -n${1:-3} /usr/share/dict/words | sed "s/'//" | sed "s/.*/\u&/" | paste -s -d '' -
}

function randomWordSpace() {
    shuf -n${1:-3} /usr/share/dict/words | sed "s/'//" | sed "s/.*/\u&/" | paste -s -d ' ' -
}

function wttr() {
    if [ -z "$1" ]; then
        curl -s 'http://wttr.in/Montreal?mpq&lang=fr' | head -n 38 
    else
        if [[ "$1" == "-h" || "$1" == "--help" ]]; then
            curl -s http://wttr.in/:help
        else
            curl -s "http://wttr.in/$1?pqm&lang=fr" | head -n 38 
        fi
    fi

}

function what() {
    ps --no-headers -eo user,rss,%CPU | awk '{arr[$1]+=$2;arr2[$1]+=$3}; END {print "USER RSS %CPU"; for (i in arr) {print i,arr[i],arr2[i]|"sort -rnk2"}}'  | column -t
}

function checksum() {
    bash -c "echo \"echo \"`md5sum $1`\" | md5sum -c\"  | tmux loadb -"
}

function vimp() {
    bash <(curl -sfL https://raw.githubusercontent.com/junegunn/myvim/master/myvim)
}
